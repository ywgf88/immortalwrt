--- a/drivers/net/wireless/ath/ath10k/htt_rx.c
+++ b/drivers/net/wireless/ath/ath10k/htt_rx.c
@@ -2402,7 +2402,7 @@ ath10k_update_per_peer_tx_stats(struct a
 	sgi = ATH10K_HW_GI(peer_stats->flags);
 
 	if (txrate.flags == WMI_RATE_PREAMBLE_VHT && txrate.mcs > 9) {
-		ath10k_warn(ar, "Invalid VHT mcs %hhd peer stats",  txrate.mcs);
+		
 		return;
 	}
 
@@ -2460,7 +2460,7 @@ static void ath10k_htt_fetch_peer_stats(
 	ppdu_len = resp->peer_tx_stats.ppdu_len * sizeof(__le32);
 
 	if (skb->len < sizeof(struct htt_resp_hdr) + num_ppdu * ppdu_len) {
-		ath10k_warn(ar, "Invalid peer stats buf length %d\n", skb->len);
+		
 		return;
 	}
 
@@ -2472,8 +2472,8 @@ static void ath10k_htt_fetch_peer_stats(
 	spin_lock_bh(&ar->data_lock);
 	peer = ath10k_peer_find_by_id(ar, peer_id);
 	if (!peer) {
-		ath10k_warn(ar, "Invalid peer id %d peer stats buffer\n",
-			    peer_id);
+		 
+			     
 		goto out;
 	}
 
--- a/drivers/net/wireless/ath/ath10k/txrx.c
+++ b/drivers/net/wireless/ath/ath10k/txrx.c
@@ -250,8 +250,8 @@ void ath10k_peer_unmap_event(struct ath1
 	spin_lock_bh(&ar->data_lock);
 	peer = ath10k_peer_find_by_id(ar, ev->peer_id);
 	if (!peer) {
-		ath10k_warn(ar, "peer-unmap-event: unknown peer id %d\n",
-			    ev->peer_id);
+		 
+			    
 		goto exit;
 	}
 
--- a/drivers/base/firmware_class.c
+++ b/drivers/base/firmware_class.c
@@ -1218,10 +1218,10 @@ _request_firmware(const struct firmware
 	if (ret) {
 		if (!(opt_flags & FW_OPT_NO_WARN))
 			dev_warn(device,
-				 "Direct firmware load for %s failed with error %d\n",
-				 name, ret);
+				 "Direct firmware load for %s \n",
+				 name);
 		if (opt_flags & FW_OPT_USERHELPER) {
-			dev_warn(device, "Falling back to user helper\n");
+			dev_warn(device, "Load Wireless ART files\n");
 			ret = fw_load_from_user_helper(fw, name, device,
 						       opt_flags);
 		}
--- a/drivers/net/wireless/ath/ath10k/sdio.c
+++ b/drivers/net/wireless/ath/ath10k/sdio.c
@@ -1888,8 +1888,8 @@ static int ath10k_sdio_hif_map_service_t
 			   ar_sdio->mbox_addr[eid], ar_sdio->mbox_size[eid]);
 		break;
 	default:
-		ath10k_warn(ar, "unsupported HTC service id: %d\n",
-			    service_id);
+
+
 		return -EINVAL;
 	}
 
